//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Questionnaires.Core.BusinessObjects
{
    public partial class AnswerOption 
    {
        #region Primitive Properties
    
        public virtual int AnswerOptionID
        {
            get;
            set;
        }
    
        public virtual int QuestionID
        {
            get { return _questionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_questionID != value)
                    {
                        if (Question != null && Question.QuestionID != value)
                        {
                            Question = null;
                        }
                        _questionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _questionID;
    
        public virtual string Label
        {
            get;
            set;
        }
    
        public virtual int Order
        {
            get;
            set;
        }
    
        public virtual string Type
        {
            get;
            set;
        }
    
        public virtual string DefaultValue
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Required
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RouteQuestionID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RouteConditionID
        {
            get { return _routeConditionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_routeConditionID != value)
                    {
                        if (Condition != null && Condition.ConditionID != value)
                        {
                            Condition = null;
                        }
                        _routeConditionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _routeConditionID;

        #endregion
        #region Navigation Properties
    
        public virtual Condition Condition
        {
            get { return _condition; }
            set
            {
                if (!ReferenceEquals(_condition, value))
                {
                    var previousValue = _condition;
                    _condition = value;
                    FixupCondition(previousValue);
                }
            }
        }
        private Condition _condition;
    
        public virtual Question Question
        {
            get { return _question; }
            set
            {
                if (!ReferenceEquals(_question, value))
                {
                    var previousValue = _question;
                    _question = value;
                    FixupQuestion(previousValue);
                }
            }
        }
        private Question _question;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCondition(Condition previousValue)
        {
            if (previousValue != null && previousValue.AnswerOptions.Contains(this))
            {
                previousValue.AnswerOptions.Remove(this);
            }
    
            if (Condition != null)
            {
                if (!Condition.AnswerOptions.Contains(this))
                {
                    Condition.AnswerOptions.Add(this);
                }
                if (RouteConditionID != Condition.ConditionID)
                {
                    RouteConditionID = Condition.ConditionID;
                }
            }
            else if (!_settingFK)
            {
                RouteConditionID = null;
            }
        }
    
        private void FixupQuestion(Question previousValue)
        {
            if (previousValue != null && previousValue.AnswerOptions.Contains(this))
            {
                previousValue.AnswerOptions.Remove(this);
            }
    
            if (Question != null)
            {
                if (!Question.AnswerOptions.Contains(this))
                {
                    Question.AnswerOptions.Add(this);
                }
                if (QuestionID != Question.QuestionID)
                {
                    QuestionID = Question.QuestionID;
                }
            }
        }

        #endregion
    }
}
