@{
    ViewBag.PageTitle = "ProcessLetter";
}

@model NHSD.ElephantParade.Web.Areas.Advisor.Models.CommunicationsLetterWrapper
<script type="text/javascript" src="@Url.Content("~/Scripts/tiny_mce/jquery.tinymce.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.numeric.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".datepicker").datepicker();
        $(".numericDecimal").numeric();
        $(".button").button();
        $(".resizable").resizable();
        $('textarea.tinymce').tinymce({
            // Location of TinyMCE script
            script_url: '@Url.Content("~/scripts/tiny_mce/tiny_mce.js")',

            // General options
            theme: "advanced",
            plugins: "pagebreak,style,layer,table,advhr,advimage,advlink,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

            // Theme options
            theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "undo,redo,|,cut,copy,paste,pastetext,pasteword,|,bullist,numlist,|,outdent,indent,blockquote,|,link,unlink,anchor,image,cleanup,code,|,preview,|,forecolor,backcolor",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
            theme_advanced_resizing_use_cookie : false,


            // Example content CSS (should be your site CSS)
            content_css: "@Url.Content("~/Content/themes/HealthLines/css/Site.css")",

            // Drop lists for link/image/media/template dialogs
            template_external_list_url: "lists/template_list.js",
            external_link_list_url: "lists/link_list.js",
            external_image_list_url: "lists/image_list.js",
            media_external_list_url: "lists/media_list.js"           
        });

    });

    function handleGPSuccess() {
        
    }
    function handleError(ajaxContext) {
        var response = ajaxContext.statusText;
        var statusCode = ajaxContext.status;
        alert("Sorry, the request failed with status code " + statusCode);
    }
    
</script>


@if (Model != null)
{    
    <h2>Process @Model.LetterName</h2>

    if (!string.IsNullOrWhiteSpace(Model.LetterDiscription))
    {
        <p>@Html.Raw(@Model.LetterDiscription)</p>
    }
    using (Html.BeginForm("Action", "Communications"))
    {
            @Html.Hidden("returnUrl", @ViewData["returnUrl"])
            @Html.Hidden("StudyID", @Model.StudyID)
            @Html.Hidden("PatientID", @Model.PatientId)
            @Html.Hidden("resultSetID", @Model.ResultSetID)
            @Html.Hidden("letterID", @Model.LetterID)
           
        int i = 0;
        if (Model.fields != null && Model.fields.Count > 0)
        {
            
            <fieldset>
                <legend>User Content</legend>
                <span >This letter required additional content. Please update the content below where applicable.</span>
                
                @foreach (KeyValuePair<string, NHSD.ElephantParade.DocumentGenerator.Letters.LetterUserContent> item in Model.fields)
                {   
                    if ( (item.Value.Type == typeof(string) || item.Value.Type == typeof(string[]))
                        || (item.Value.Type == typeof(DateTime))
                        ||(item.Value.Type == typeof(decimal)) )
                    {
                        
                        <div>
                            <div class="ui-widget-content " style="margin-top:10px; padding:10px;display:inline-block;">
                                <div >@item.Key</div>
                                <div>
                                    @if (item.Value.Type == typeof(string) || item.Value.Type == typeof(string[]))
                                    {
                                        <input type="hidden" name="values[@i].Key" value="@item.Key" />
                                        <textarea  name="values[@i].Value" title="Text" class="resizable" style="width:600px;height:150px;">@item.Value.DefaultContent</textarea> 
                                    }
                                    else if (item.Value.Type == typeof(DateTime))
                                    {
                                        <input type="hidden" name="values[@i].Key" value="@item.Key" /> 
                                        <input type="text" name="values[@i].Value" value="@DateTime.Now.ToShortDateString()" class="datepicker" />                
                                    }
                                    else if (item.Value.Type == typeof(decimal))
                                    {
                                        <input type="hidden" name="values[@i].Key" value="@item.Key" /> 
                                        <input type="text" name="values[@i].Value" value="" class="numericDecimal" />  
                                    }      
                                    @{
                                    i++;    
                                    }
                                </div>
                            </div> 
                        </div>
                    }
                }
            </fieldset>            
        }
        
        <fieldset>
            <legend>Email</legend>
            <div style="margin-bottom:20px;padding:10px;" class="ui-widget-content">
            <div >
                Address<br />
                <input type="text" name="emailaddress" value="@Model.EmailTo" readonly="readonly"  />
            </div>
            <div style="margin-top:20px" >
                Email Content<br />
                <textarea name="EmailContent" class="tinymce" style="width:100%;height:300px;" >@Model.EmailContent</textarea>    
            </div>
            <div>
            @if (Model.LetterName != null)
            {
            Attachments: 
                 <a  href="Javascript:document.getElementById('viewLetterButton').click();">@(Model.LetterID + ".pdf")</a>
            }
            </div>
        </div>
        @Html.ValidationSummary()
        <div id="LetterUpdateResponce"></div>
        @if (ViewData["returnUrl"] != null && String.IsNullOrWhiteSpace((string)ViewData["returnUrl"]))
        {
        <a style="float:right;" href="@ViewData["returnUrl"]" class="button">Back</a>
        }
        <input type="submit" name="ProcessLetter" value="Send Correspondence" class="button" /> 
        @if (Model.LetterName != null)
        {
        <input id="viewLetterButton" type="submit" name="ViewLetter"  value="View Letter" class="button" />
        }
        </fieldset>
        
    }
}
else
{
    <h2>Invalid letter information</h2>
    @Html.ValidationSummary()
}