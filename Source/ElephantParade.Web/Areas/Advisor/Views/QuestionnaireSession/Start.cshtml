@using Questionnaires.Web.Helpers

@model  Questionnaires.Core.Services.Models.IPageable<Questionnaires.Core.Services.Models.QuestionSetPageItem>

@{
    ViewBag.PageTitle = "Questionnaire";    
}

<script src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.numeric.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/QuestionValidator.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/conditional-validation.js")" type="text/javascript"></script> 
<script type="text/javascript">
    //override default date validate
    jQuery(function ($) {
        $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        //Questionnaire setup
        //--------------------
        $("#QuestionForm").find(".button").button();
        $("#QuestionForm").find(".datePicker").datepicker();
        $("#QuestionForm").find(".dateTimePicker").datetimepicker();
        $("#QuestionForm").find('.timePicker').timepicker({});
        $("#QuestionForm").find(".numericInteger").numeric({ decimal: false });
        $("#QuestionForm").find(".numericDecimal").numeric();
        $("#QuestionForm").find(".checkunique").click(function () {
            $(this).closest(".AnswerOptions").find('[type="checkbox"]').not(".checkunique").attr('checked', false);
        });
        $("#QuestionForm").find('[type="checkbox"]').not(".checkunique").click(function () {
            $(this).closest(".AnswerOptions").find('.checkunique').attr('checked', false);
        });
        $("#QuestionForm").questionvalidation();
        //Questionnaire setup END
        //-----------------------
        $("#instructionText").dialog({
            resizable: true,
            autoOpen: false,
            show: "blind",
            height: 300,
            width: 500,
            modal: false
        });
        $("#opener").click(function () {
            $("#instructionText").dialog("open");
            return false;
        });
        $("#notesSection").dialog({
            resizable: true,
            autoOpen: false,
            show: "blind",
            maxHeight: 450,
            width: 550,
            modal: false
        });
        $("#notesSectionOpener").click(function () {
            $("#notesSection").dialog("open");
            return false;
        });
        //prevent use of browser back button
        //history.go(+1);
    });
    function reloadPatientCallHistory() {
        $.ajax(
         { type: "GET",
             url: '@Html.Raw(Url.Action("PatientCommentsHistory", "Callback", new { patientId = ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).PatientId, StudyId = ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).StudyID }))',
             data: "{}",
             cache: false,
             dataType: "html",
             success: function (data) {
                 $("#PatientCommentsHistory").html(data);
                 $("#txtNewCallComment").val('');
             },
             error: function (data) {
                 CommentError("Error refreshing list.", "");
             }

         });
    }
    
</script>


@Html.Partial("~/Areas/Advisor/Views/CallBack/_PatientDetailsPartialView.cshtml",ViewData["Patient"])

<div style="float:right;">
@{ 
    var currentPage = Model.PageIndex == 0 ? "?" : Model.PageIndex.ToString();
    var moduleName = Model.Page.Count() > 0 ? Model.Page.First().Question.QuestionGroup : "";
}
<h3>Page @currentPage of @Model.PageCount</h3>

</div>
<h2>@ViewBag.QuestionnaireTitle</h2>
<h4>Module-> @moduleName</h4>
@using (Html.BeginForm(null,null,FormMethod.Post,new {id = "QuestionForm"})) {
    
    int i = 0;
    foreach (var item in Model.Page)
    {
        TempData["QuestionIndex"] = i;
        Html.RenderPartial("_Question", item);
    }    
        
    
    @*<a href="@Url.Action("Close", new { id = ViewContext.RouteData.Values["id"] })" class="button" onclick="return confirm('Close this Questionnaire?');">Close Call</a>*@
    <a style="float:right;" href="@Url.Action("Suspend", new { id = ViewContext.RouteData.Values["id"] })" class="button" onclick="return confirm('Suspend this Questionnaire?');">Suspend Call</a>    
    @Html.ActionLink("Call Details", "CallDetails", "Callback", new { id = this.ViewContext.RouteData.Values["CallbackID"] }, new { @class = "button", target = "_blank", style="float:right;" })

    
    <button class="button" type="button"  onclick="javascript:location.href = '@Url.Action("Back", new { id = ViewContext.RouteData.Values["id"] })';">Back</button> 
    <button class="button" type="submit" >Next</button> 
    
    <a href="#"  id="opener" style="margin-left:20px;">Call back / Worsening instructions</a>
    <a href="#"  id="notesSectionOpener" style="margin-left:20px;">Add / View Notes</a>
    
    <div class="clear"></div> 
}



<div id="instructionText" style="display:none;" title="Call back / Worsening instructions">
    <p><strong>If you need to contact us regarding a Healthlines matter, for example, to re-arrange your next call, you can leave a voicemail message for us on </strong><strong>0345 603 0897</strong><strong> or email us at: </strong><a href="mailto:Snhs.healthlines@nhs.net"><strong>Snhs.healthlines@nhs.net</strong></a> <strong>and a Healthlines Advisor will get back to you between the hours of 10.00 &ndash; 20.00hrs weekdays and 10.00 -14.00hrs on Saturdays. The Healthlines Service is closed on Sundays and bank holidays. </strong></p>
    <p><strong>However,&nbsp; if you start to feel unwell in <em>any</em> way, or you develop any new or worsening symptoms, you should call NHS 111 for advice by dialling 111 from any landline or mobile phone free of charge.</strong></p>
    <p><strong>&nbsp;This includes any worsening of your depression such as:</strong></p>
    <ul>
	    <li><strong>Thinking about harming yourself such as having suicidal thoughts </strong></li>
	    <li><strong>More persistent suicidal thoughts</strong></li>
	    <li><strong>Feeling distressed or agitated</strong></li>
	    <li><strong>Feeling more low in mood than is usual for you or not able to perform everyday activities that you normally would</strong></li>
	    <li><strong>If you, or others close to you think you are neglecting or not looking after yourself</strong></li>
	    <li><strong>You feel frightened</strong></li>
    </ul>
    <p><strong>If you need to talk, you can also contact the Samaritans on 08457 90 90 90 or visit their web site on:</strong></p>
    <p><a href="http://www.samaritans.org/talk_to_someone/phone_calls.aspx"><strong>http://www.samaritans.org/talk_to_someone/phone_calls.aspx</strong></a></p>
    <p><strong>Goodbye for now.</strong></p>
</div>

<div id="notesSection" style="display:none;" title="Notes">      
    @using (Ajax.BeginForm("UpdatePatientComments", "CallBack", new AjaxOptions()
    {
        HttpMethod = "POST",
        OnFailure = "CommentErrorHandler",
        OnSuccess = "reloadPatientCallHistory()",
        UpdateTargetId = "PatientCommentArea"
    }))
    {
        @Html.Hidden("PatientID", ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).PatientId)
        @Html.Hidden("StudyID", ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).StudyID)
         @Html.Hidden("CallbackID", ViewContext.RouteData.Values["CallbackID"])
        <div id="PatientCommentArea">
            @Html.Partial("~/Areas/Advisor/Views/CallBack/_AddComment.cshtml", new NHSD.ElephantParade.Core.Models.PatientCallCommentViewModel())
        </div>
        <input type="submit" value="Add Note" class="button"  title="Click here to add a note"  />
        <div id="PatientCommentsHistory">
            @Html.Action("PatientCommentsHistory", "Callback", new { patientId = ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).PatientId, StudyId = ((NHSD.ElephantParade.Domain.Models.StudyPatient)ViewData["Patient"]).StudyID })
        </div> 
        <br />      
    }
</div>